 #!/usr/bin/python
# -*- coding: utf-8 -*-

"""This module implements exception classes for HTTP client for the REST API f audioid monitor generation 3 service"""

__author__    = "Lars Fabig"
__date__      = "18.08.2016"
__email__     = "lfabig@mufin.com"
__docformat__ = 'reStructuredText'


# Standard library imports ...
import json


class AudioidMonException(Exception):
    """Base Exception Class"""


class AudioidMonServiceNotAvailable(AudioidMonException):
    """A connection error occurred (HTTP response 404)"""


class AudioidMonInternalError(AudioidMonException):
    """Code: 20100  Error: Internal Error"""


class AudioidMonItemAlreadyExists(AudioidMonException):
    """Code: 20105  Error: Item already exists"""


class AudioidMonItemNotFound(AudioidMonException):
    """Code: 20106  Error: Item not found"""


class AudioidMonInvalidInput(AudioidMonException):
    """Code: 20109  Error: Invalid Input"""


class AudioidMonSubmittedItemIsTooLarge(AudioidMonException):
    """Code: 20114  Error: Submitted item too large"""


class AudioidMonNotEnoughResources(AudioidMonException):
    """Code: 20115  Error: Not enough resources"""


class AudioidMonInvalidFingerprint(AudioidMonException):
    """Code: 20116  Error: Invalid fingerprint"""


class AudioidMonResourceBusy(AudioidMonException):
    """Code: 20119  Error: Resource is busy"""


class AudioidMonLicenseVerificationFailed(AudioidMonException):
    """Code: 20121  Error: License verification failed"""


class AudioidMonUnexpectedError(AudioidMonException):
    """An unexpected error occurred"""



if __name__ == "__main__":
    import doctest
    doctest.testmod()
